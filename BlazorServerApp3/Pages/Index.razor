@page "/"
@using BlazorServerApp3.Data
@using BlazorServerApp3.Services

@inject ITodoService _todoService;

<PageTitle>Todo List</PageTitle>
<div class="border" style="padding: 20px;">
    <h4>New Item</h4>
    <TodoItemForm OnItemAdded="@ItemsChanged"></TodoItemForm>
</div>
<div class="border" style="padding: 20px; margin-top:  20px;">
    <div style="display: flex; flex-direction:  column">
        @foreach (var todo in Todos){
            <div style="display: flex; margin-bottom: 10px">
        <div style="display: flex; align-items: center; margin-bottom: 10px;">
            <div class="@ItemClass(todo)" style="width: 280px;">@todo.Text</div>    
        </div>
        @if (todo.Completed){
            <div style="width: 120px">
                <button class="btn btn-primary" onclick="@(()=>UncompleteItem(todo))">Uncomplete</button>
            </div>
        }
        @if (!todo.Completed){
            <div style="width: 120px;">
                <button class="btn btn-primary" onclick="@(()=>CompleteItem(todo))">Complete</button>
            </div>
        }
                <div>
                    <button class="btn btn-danger" onclick="@(()=>DeleteItem(todo))">Delete</button>
                </div>
            </div>
        }
    </div>
</div>

@code {

    private IList<TodoItem> Todos { get; set; } = new List<TodoItem>();

    protected override void OnInitialized() {
        Todos = _todoService.GetAll().ToList();
    }

    string ItemClass(TodoItem item) => item.Completed ? "item-completed" : "";

    void ItemsChanged() {
        Todos = _todoService.GetAll().ToList();
        StateHasChanged();
    }

    void DeleteItem(TodoItem todo) {
        _todoService.Delete(todo);
        ItemsChanged();
    }

    void CompleteItem(TodoItem item) {
        _todoService.Complete(item);
        ItemsChanged();
    }

    void UncompleteItem(TodoItem item) {
        _todoService.Uncomplete(item);
        ItemsChanged();
    }
}